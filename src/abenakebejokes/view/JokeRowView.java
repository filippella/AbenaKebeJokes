/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package abenakebejokes.view;

import abenakebejokes.helper.FontHelper;
import abenakebejokes.helper.ImageLoadHelper;
import abenakebejokes.model.Joke;
import java.awt.Component;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author Filippo
 */
public class JokeRowView extends javax.swing.JPanel implements ListCellRenderer<Joke> {

    /**
     * Creates new form JokeRowView
     */
    public JokeRowView() {
        initComponents();
        FontHelper helper = new FontHelper();
        this.jokeTitle.setFont(helper.getFont());
        this.jokeInfo.setFont(helper.getFont());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jokeAvatar = new javax.swing.JLabel();
        jokeTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jokeInfo = new javax.swing.JLabel();

        jokeAvatar.setBackground(new java.awt.Color(0, 204, 153));
        jokeAvatar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jokeTitle.setText("Title");

        jokeInfo.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jokeAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jokeTitle)
                    .addComponent(jokeInfo))
                .addContainerGap(345, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jokeTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jokeInfo))
                    .addComponent(jokeAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jokeAvatar;
    private javax.swing.JLabel jokeInfo;
    private javax.swing.JLabel jokeTitle;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getListCellRendererComponent(JList<? extends Joke> list, Joke value, int index, boolean isSelected, boolean cellHasFocus) {

        this.jokeTitle.setText(value.getJokeTitle());
        this.jokeInfo.setText(value.getJokeContent());
        if (isSelected) {
            setBackground(list.getSelectionBackground());
            setForeground(list.getSelectionForeground());
        } else {
            setBackground(list.getBackground());
            setForeground(list.getForeground());
        }

        ImageLoadHelper.getInstance().handle(jokeAvatar, "abenakebejokes/assets/jokeimages/" + value.getAvatarURL());
        return this;
    }
}
